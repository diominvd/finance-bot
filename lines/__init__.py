import pydantic.main
import datetime

import config
from config import bot_storage
from data import database


keyboards_lines: dict = {
    'currencies_keyboard': {
        'RUB': {
            'title': 'üá∑üá∫ | RUB (‚ÇΩ)',
            'callback_data': 'currency_‚ÇΩ'
        },
        'BYN': {
            'title': 'üáßüáæ | BYN (Br)',
            'callback_data': 'currency_Br'
        },
        'UAH': {
            'title': 'üá∫üá¶ | UAH (‚Ç¥)',
            'callback_data': 'currency_‚Ç¥'
        },
        'KZT': {
            'title': 'üá∞üáø | KZT (‚Ç∏)',
            'callback_data': 'currency_‚Ç∏'
        },
        'USD': {
            'title': 'üá∫üá∏ | USD ($)',
            'callback_data': 'currency_$'
        },
        'EUR': {
            'title': 'üá™üá∫ | EUR (‚Ç¨)',
            'callback_data': 'currency_‚Ç¨'
        },
        'cancel': {
            'title': '–û—Ç–º–µ–Ω–∞',
            'callback_data': 'cancel'
        }
    },
    'categories_keyboard': {
        'products': {
            'title': 'üçû | –ü—Ä–æ–¥—É–∫—Ç—ã',
            'callback_data': 'category_products'
        },
        'cafes': {
            'title': 'üçî | –ö–∞—Ñ–µ',
            'callback_data': 'category_cafes'
        },
        'auto': {
            'title': 'üöò | –ê–≤—Ç–æ–º–æ–±–∏–ª—å',
            'callback_data': 'category_auto'
        },
        'transport': {
            'title': 'üöÉ | –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
            'callback_data': 'category_transport'
        },
        'home': {
            'title': 'üè° | –î–æ–º',
            'callback_data': 'category_home'
        },
        'entertainment': {
            'title': 'üé° | –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
            'callback_data': 'category_entertainment'
        },
        'sport': {
            'title': 'üèì | –°–ø–æ—Ä—Ç',
            'callback_data': 'category_sport'
        },
        'health': {
            'title': 'üíä | –ó–¥–æ—Ä–æ–≤—å–µ',
            'callback_data': 'category_health'
        },
        'education': {
            'title': 'üìö | –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
            'callback_data': 'category_education'
        },
        'gifts': {
            'title': 'üéÅ | –ü–æ–¥–∞—Ä–∫–∏',
            'callback_data': 'category_gifts'
        },
        'beauty': {
            'title': 'üíÑ | –ö—Ä–∞—Å–æ—Ç–∞',
            'callback_data': 'category_beauty'
        },
        'clothes': {
            'title': 'üëï | –û–¥–µ–∂–¥–∞',
            'callback_data': 'category_clothes'
        },
        'technic': {
            'title': 'üñ• | –¢–µ—Ö–Ω–∏–∫–∞',
            'callback_data': 'category_technic'
        },
        'subscriptions': {
            'title': 'üì≤ | –ü–æ–¥–ø–∏—Å–∫–∏',
            'callback_data': 'category_subscriptions'
        },
        'menu': {
            'title': '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
            'callback_data': 'menu'
        }
    },
    'last_operations_keyboard': {
        'delete_last_operation': {
            'title': '–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –æ–ø–µ—Ä–∞—Ü–∏—é',
            'callback_data': 'delete_last'
        },
        'menu': {
            'title': '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
            'callback_data': 'menu'
        }
    },
    'menu_keyboard': {
        'add_operation': '‚ûï | –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é',
        'last_operations': 'üïî | –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
        'profile': 'üë§ | –ü—Ä–æ—Ñ–∏–ª—å',
        'settings': '‚öôÔ∏è | –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
    },
    'settings_keyboard': {
        'clear_all_operations': 'üóë | –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π',
        'change_currency': 'üí± | –ò–∑–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É',
        'menu': 'üè† | –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    },
}

categories: dict = {
    'products': '–ü—Ä–æ–¥—É–∫—Ç—ã üçû',
    'cafes': '–ö–∞—Ñ–µ üçî',
    'auto': '–ê–≤—Ç–æ–º–æ–±–∏–ª—å üöò',
    'transport': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç üöÉ',
    'home': '–î–æ–º üè°',
    'entertainment': '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è üé°',
    'sport': '–°–ø–æ—Ä—Ç üèì',
    'health': '–ó–¥–æ—Ä–æ–≤—å–µ üíä',
    'education': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ üìö',
    'gifts': '–ü–æ–¥–∞—Ä–∫–∏ üéÅ',
    'beauty': '–ö—Ä–∞—Å–æ—Ç–∞ üíÑ',
    'clothes': '–û–¥–µ–∂–¥–∞ üëï',
    'technic': '–¢–µ—Ö–Ω–∏–∫–∞ üñ•',
    'subscriptions': '–ü–æ–¥–ø–∏—Å–∫–∏ üì≤'
}

commands_lines: dict = {
    'text_help_command': '–°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞:\n\n'
                         '1. <b>–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é</b> - –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –≤—ã–±–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å—É–º–º—ã. '
                         '–û–ø–µ—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\n\n'
                         '2. <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</b> - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ–ø–µ—Ä–∞—Ü–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é '
                         '—É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é.\n\n'
                         '3. <b>–ü—Ä–æ—Ñ–∏–ª—å</b> - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∑–∞ –æ—Ç—á—ë—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥.\n\n'
                         '4. <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.\n'
                         '4.1 <b>–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π</b> - –£–¥–∞–ª—è–µ—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π. –ü—Ä–∏ —ç—Ç–æ–º —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –æ—Ç—á—ë—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥. '
                         '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é.',
    'text_start_command': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Finance Bot üí≤\n\n'
                          '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ —É—á—ë—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤. '
                          '–í—ã –º–æ–∂–µ—Ç–µ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, '
                          '–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç –∑–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.\n\n'
                          '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/help."',
    'text_info_command': f'<b>Finance Bot v{config.version}</b>.\n'
                         f'–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Git Hub: clck.ru/34qJYm\n'
                         f'–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞: @diominvdev\n'
                         f'Developer: @diominvd',
}

def currency(symbol: str) -> str:
    return f'–í—ã–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞: {symbol}'


def change_currency(symbol: str) -> str:
    return f'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–∞–ª—é—Ç–∞: {symbol}\n' \
           f'–°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –æ—á–∏—â–µ–Ω.'


currency_lines: dict = {
    'def_text_currency_chosen': currency,

    'text_choose_currency': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.',
    'text_currency_changed': change_currency,

    'warning_text_change_currency': '‚ùóÔ∏è–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∞–ª—é—Ç—ã —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω. '
                                    '–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.'
}


def last_operations(user_id: int) -> str:
    operations_list: list = database.select_operations(user_id=user_id, limit=5)
    message_text: str = f'–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:\n'

    for operation in operations_list:
        currency: str = operation[0]
        category: str = operation[1]
        value: float = operation[2]
        date: str = operation[3]
        message_text += f'{value} {currency} | {categories[category]} | {date}\n'

    return message_text


last_operations_lines: dict = {
    'def_text_last_operations': last_operations,

    'error_text_last_operations_empty': '–°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –ø—É—Å—Ç.',
}


def category(category: str = None) -> str:
    return f'–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {categories[category]}'


def value(user_id: int, value: str = None) -> str:
    return f'–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: {float(value)} {database.select_user_currency(user_id=user_id)}'


def def_text_operation_complete(user_id: int) -> str:
    currency: str = database.select_user_currency(user_id=user_id)
    return f'üìå –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.\n' \
           f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {categories[bot_storage[user_id]["category"]]}\n' \
           f'–°—É–º–º–∞: {bot_storage[user_id]["value"]} {bot_storage[user_id]["currency"]}\n' \
           f'–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {bot_storage[user_id]["date"]}\n\n'


new_operation_lines: dict = {
    'def_text_category_chosen': category,
    'def_text_operation_complete': def_text_operation_complete,
    'def_text_value_inputted': value,

    'error_text_incorrect_value': '–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É–º–º—ã –æ–ø–µ—Ä–∞—Ü–∏–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.',

    'text_choose_category': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏.',
    'text_input_value': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –æ–ø–µ—Ä–∞—Ü–∏–∏.',
}


def current_date_formation() -> str:
    date: list = str(datetime.date.today()).split('-')
    date: str = f'{date[2]}.{date[1]}.{date[0]}'

    return date


def output_statistic(username: str, user_id: int) -> str:
    operations_list: list = database.select_operations(user_id=user_id)
    current_date: str = current_date_formation()

    try:
        first_date: str = operations_list[0][3]
    except:
        reporting_period: str = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
    else:
        reporting_period: str = f'{first_date} - {current_date}'
    finally:
        categories_values: dict = {
            'products': {
                'title': '–ü—Ä–æ–¥—É–∫—Ç—ã',
                'value': 0
            },
            'cafes': {
                'title': '–ö–∞—Ñ–µ',
                'value': 0
            },
            'auto': {
                'title': '–ê–≤—Ç–æ–º–æ–±–∏–ª—å',
                'value': 0
            },
            'transport': {
                'title': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
                'value': 0
            },
            'home': {
                'title': '–î–æ–º',
                'value': 0
            },
            'entertainment': {
                'title': '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
                'value': 0
            },
            'sport': {
                'title': '–°–ø–æ—Ä—Ç',
                'value': 0
            },
            'health': {
                'title': '–ó–¥–æ—Ä–æ–≤—å–µ',
                'value': 0
            },
            'education': {
                'title': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
                'value': 0
            },
            'gifts': {
                'title': '–ü–æ–¥–∞—Ä–∫–∏',
                'value': 0
            },
            'beauty': {
                'title': '–ö—Ä–∞—Å–æ—Ç–∞',
                'value': 0
            },
            'clothes': {
                'title': '–û–¥–µ–∂–¥–∞',
                'value': 0
            },
            'technic': {
                'title': '–¢–µ—Ö–Ω–∏–∫–∞',
                'value': 0
            },
            'subscriptions': {
                'title': '–ü–æ–¥–ø–∏—Å–∫–∏',
                'value': 0
            }
        }
        total_sum: float = 0
        currency: str = database.select_user_currency(user_id)

        # Summ all values in categories.
        for operation in operations_list:
            categories_values[operation[1]]['value'] += operation[2]
            total_sum += operation[2]

        message_text = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n' \
                       f'–í–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.\n' \
                       f'üìÖ –ü–µ—Ä–∏–æ–¥: {reporting_period}\n\n' \
                       f'{categories_values["products"]["title"]}: {categories_values["products"]["value"]} {currency}\n' \
                       f'{categories_values["cafes"]["title"]}: {categories_values["cafes"]["value"]} {currency}\n' \
                       f'{categories_values["auto"]["title"]}: {categories_values["auto"]["value"]} {currency}\n' \
                       f'{categories_values["transport"]["title"]}: {categories_values["transport"]["value"]} {currency}\n' \
                       f'{categories_values["home"]["title"]}: {categories_values["home"]["value"]} {currency}\n' \
                       f'{categories_values["entertainment"]["title"]}: {categories_values["entertainment"]["value"]} {currency}\n' \
                       f'{categories_values["sport"]["title"]}: {categories_values["sport"]["value"]} {currency}\n' \
                       f'{categories_values["health"]["title"]}: {categories_values["health"]["value"]} {currency}\n' \
                       f'{categories_values["education"]["title"]}: {categories_values["education"]["value"]} {currency}\n' \
                       f'{categories_values["gifts"]["title"]}: {categories_values["gifts"]["value"]} {currency}\n' \
                       f'{categories_values["beauty"]["title"]}: {categories_values["beauty"]["value"]} {currency}\n' \
                       f'{categories_values["clothes"]["title"]}: {categories_values["clothes"]["value"]} {currency}\n' \
                       f'{categories_values["technic"]["title"]}: {categories_values["technic"]["value"]} {currency}\n' \
                       f'{categories_values["subscriptions"]["title"]}: {categories_values["subscriptions"]["value"]} {currency}\n\n' \
                       f'–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {total_sum} {currency}'

        return message_text


profile_lines: dict = {
    'def_text_statistic': output_statistic
}

settings_lines: dict = {
    'error_text_operations_list_empty': '–û—á–∏—Å—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.\n–°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –ø—É—Å—Ç.',
    'text_settings': '–ü–µ—Ä–µ—Ö–æ–∂—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.',
    'text_all_operations_deleted': '–°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –æ—á–∏—â–µ–Ω.'
}

other_lines: dict = {
    'text_back_menu': '–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
}
