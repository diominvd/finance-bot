import config
import emoji

import database
import storage
from storage import bot_storage

keyboards_lines: dict = {
    'menu_keyboard': {
        'income': 'üìà | –î–æ—Ö–æ–¥',
        'expense': 'üìâ | –†–∞—Å—Ö–æ–¥',
        'profile': 'üë§ | –ü—Ä–æ—Ñ–∏–ª—å',
        'settings': '‚öôÔ∏è | –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
    },
    'currencies_keyboard': {
        'RUB': {
            'name': 'RUB',
            'title': 'üá∑üá∫ | RUB (‚ÇΩ)',
            'callback_data': 'currency_RUB',
            'text': '‚ÇΩ'
        },
        'BYN': {
            'name': 'BYN',
            'title': 'üáßüáæ | BYN (Br)',
            'callback_data': 'currency_BYN',
            'text': 'Br'
        },
        'UAH': {
            'name': 'UAH',
            'title': 'üá∫üá¶ | UAH (‚Ç¥)',
            'callback_data': 'currency_UAH',
            'text': '‚Ç¥'
        },
        'KZT': {
            'name': 'KZT',
            'title': 'üá∞üáø | KZT (‚Ç∏)',
            'callback_data': 'currency_KZT',
            'text': '‚Ç∏'
        },
        'USD': {
            'name': 'USD',
            'title': 'üá∫üá∏ | USD ($)',
            'callback_data': 'currency_USD',
            'text': '$'
        },
        'EUR': {
            'name': 'EUR',
            'title': 'üá™üá∫ | EUR (‚Ç¨)',
            'callback_data': 'currency_EUR',
            'text': '‚Ç¨'
        }
    },
    'profile_keyboard': {
        'last_operations': 'üïê | –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
        'statistic': 'üìä | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        'main_menu': 'üè† | –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    },
    'last_operations_keyboard': {
        'delete_last': {
            'title': '–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –æ–ø–µ—Ä–∞—Ü–∏—é',
            'callback_data': 'delete_last'
        },
        'cancel': {
            'title': '–û—Ç–º–µ–Ω–∞',
            'callback_data': 'cancel'
        }
    }
}

commands_lines: dict = {
    'command_text_help': '–°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞:\n\n'
                         '1. <b>–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é</b> - –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –≤—ã–±–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å—É–º–º—ã. '
                         '–û–ø–µ—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\n\n'
                         '2. <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</b> - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ–ø–µ—Ä–∞—Ü–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é '
                         '—É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é.\n\n'
                         '3. <b>–ü—Ä–æ—Ñ–∏–ª—å</b> - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∑–∞ –æ—Ç—á—ë—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥.\n\n'
                         '4. <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.\n'
                         '4.1 <b>–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π</b> - –£–¥–∞–ª—è–µ—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π. –ü—Ä–∏ —ç—Ç–æ–º —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –æ—Ç—á—ë—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥. '
                         '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é.',
    'command_text_info': f'<b>Finance Bot v{config.version}</b>.\n'
                         f'–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Git Hub: clck.ru/34qJYm\n'
                         f'–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞: @diominvdev\n'
                         f'Developer: @diominvd',
    'command_text_start': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Finance Bot üí≤\n\n'
                          '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ —É—á—ë—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤. '
                          '–í—ã –º–æ–∂–µ—Ç–µ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, '
                          '–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç –∑–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.\n\n'
                          '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/help."',
}


first_start_lines: dict = {
    'error_text_incorrect_categories': '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.',
    'error_text_wrong_balance': '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É',

    'text_set_currency': '–ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–∏–º –±–æ—Ç–∞. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö.',
    'text_set_balance': '–û—Ç–ª–∏—á–Ω–æ. –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å.',
    'text_set_income_categories': '–¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–æ—Ö–æ–¥–æ–≤. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n'
                                  '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ emoji\n'
                                  '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ emoji\n\n'
                                  '–ú–µ–∂–¥—É –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ emoji –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ–±–µ–ª.',
    'text_set_expense_categories': '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –≤ —Ç–∞–∫–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–∞–∫ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤.',
    'text_first_start_complete': '–û—Ç–ª–∏—á–Ω–æ. –ü–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.'
}


def category_set(user_id: int) -> str:
    return f'–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {bot_storage[user_id]["category"]} {bot_storage[user_id]["emoji"]}.'


def value_set(user_id: int) -> str:
    return f'–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: {bot_storage[user_id]["value"]} {bot_storage[user_id]["currency"]}'


def operation_complete(user_id: int) -> str:
    return f'–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ üìå\n' \
           f'–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏: {operations_types[bot_storage[user_id]["operation_type"]]}\n' \
           f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {bot_storage[user_id]["category"]} {bot_storage[user_id]["emoji"]}\n' \
           f'–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: {bot_storage[user_id]["value"]} {bot_storage[user_id]["currency"]}'


operations_types: dict = {
    'income': '–î–æ—Ö–æ–¥',
    'expense': '–†–∞—Å—Ö–æ–¥'
}


new_operation_lines: dict = {
    'def_text_category_set': category_set,
    'def_text_value_set': value_set,
    'def_text_operation_complete': operation_complete,

    'error_text_incorrect_value': '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.',

    'text_choose_income_category': '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏.',
    'text_choose_operation_value': '–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –æ–ø–µ—Ä–∞—Ü–∏–∏.'
}


def load_profile(data: tuple) -> str:
    return f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{data[0]}\n' \
           f'–ë–∞–ª–∞–Ω—Å: {data[2]} {data[1]}'


profile_lines: dict = {
    'profile_info': load_profile,
}


def last_operations(user_id: int, operations_list: list) -> str:

    message_text: str = ''

    for operation in operations_list:
        if operation[0] == 'income':
            sign: str = '+'
            categories: dict = database.load_categories(user_id, operation_type='income')
        elif operation[0] == 'expense':
            sign: str = '-'
            categories: dict = database.load_categories(user_id, operation_type='expense')

        message_text += f'{sign}{operation[3]} {operation[1]} | {categories[operation[2]]["title"]} {emoji.emojize(categories[operation[2]]["emoji"])} | {operation[4]}\n'

    return message_text


last_operations_lines: dict = {
    'def_text_last_operations': last_operations,

    'error_text_last_operations_empty': '–°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –ø—É—Å—Ç.'
}
